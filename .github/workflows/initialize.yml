# .github/workflows/initialize.yml
name: üéâ Inicializa o Vault no Primeiro Push

on:
  push:
    branches:
      - main

jobs:
  initialize-and-self-destruct:
    runs-on: ubuntu-latest
    # Apenas executa se for um push para a branch 'main' E
    # se o reposit√≥rio N√ÉO for o reposit√≥rio de template original 'aretw0/vault-seed'.
    if: github.ref == 'refs/heads/main' && github.repository != 'aretw0/vault-seed'

    steps:
      - name: üõéÔ∏è Clona o Reposit√≥rio
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚öôÔ∏è Configura o Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: üßπ Reseta os Arquivos do Projeto
        run: |
          echo "üî• Resetando CHANGELOG.md"
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "Todas as mudan√ßas not√°veis neste projeto ser√£o documentadas neste arquivo." >> CHANGELOG.md
          
          echo "üî• Resetando VERSION para 0.0.1"
          echo "0.0.1" > VERSION

      - name: ‚ú® Prepara Documenta√ß√£o Inicial
        run: |
          echo "üî• Copiando e personalizando README.md"
          cp README.template.md README.md
          sed -i "s/{{REPO_NAME}}/${{ github.event.repository.name }}/g" README.md

          echo "üî• Copiando CONTRIBUTING.md"
          cp CONTRIBUTING.template.md CONTRIBUTING.md

          echo "üóëÔ∏è Removendo arquivos de template"
          rm README.template.md CONTRIBUTING.template.md

      - name: üóëÔ∏è Auto-destr√≥i e Commita
        run: |
          git rm --ignore-unmatch .github/workflows/initialize.yml
          echo "üóëÔ∏è Removendo o workflow de CI template para simplificar o setup inicial."
          rm -f .github/workflows/template-ci.yml
          echo "üóëÔ∏è Removendo templates de Pull Request t√©cnicos para simplificar o setup inicial."
          rm -f .github/PULL_REQUEST_TEMPLATE/chore-maintenance.md
          rm -f .github/PULL_REQUEST_TEMPLATE/feat-technical-enhancement.md
          rm -f .github/PULL_REQUEST_TEMPLATE/fix-technical.md
          rm -f .github/PULL_REQUEST_TEMPLATE/refactor-knowledge-note.md
          echo "üóëÔ∏è Removendo o workflow de automa√ß√£o de versionamento para simplificar o setup inicial."
          rm -f .github/workflows/automate-versioning.yml
          
          # Adiciona todos os arquivos que foram removidos ou modificados para o stage
          git add CHANGELOG.md VERSION README.md CONTRIBUTING.md \
              .github/workflows/template-ci.yml \
              .github/workflows/automate-versioning.yml \
              .github/PULL_REQUEST_TEMPLATE/chore-maintenance.md \
              .github/PULL_REQUEST_TEMPLATE/feat-technical-enhancement.md \
              .github/PULL_REQUEST_TEMPLATE/fix-technical.md \
              .github/PULL_REQUEST_TEMPLATE/refactor-knowledge-note.md
          
          if ! git diff-index --quiet --cached HEAD; then
            git commit -m "chore(project): üéâ inicializa o vault a partir do template"
            git push
          else
            echo "‚úÖ Vault j√° inicializado. Nenhum novo commit necess√°rio."
          fi
